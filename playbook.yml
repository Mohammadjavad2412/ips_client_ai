- hosts: ics-sec
  become: yes
  become_user: root
  gather_facts: yes

  # Variables
  vars:
    ansible_python_interpreter: /usr/bin/python3
    pg:
      dbname: "clientdb"
      username: "clientuser"
      password: "clientpass"

  # List of tasks
  tasks:

  - name: Copy application 
    ansible.builtin.copy:
      src: "/home/ansible/{{ item }}"
      dest: "/tmp/{{ item }}"
      owner: root
      group: root
      mode: '0644'
    with_items:
      - app.tar.gz
      - clientapi.service
      - "00-clientapi.conf"
      - clientapisrv

  - name: Create clientapi container
    ansible.builtin.command:
      cmd: /snap/bin/lxc launch ubuntu:20.04 ips1
      creates: /var/snap/lxd/common/lxd/containers/ips1
 
  - name: Create postgres container
    ansible.builtin.command:
      cmd: /snap/bin/lxc launch ubuntu:20.04 postgresql
      creates: /var/snap/lxd/common/lxd/containers/postgresql
 
  - name: setup postgresql container
    ansible.builtin.shell: |
      lxc list postgresql -f csv -c s | grep RUNNING >/dev/null 2>&1 || /snap/bin/lxc start postgresql
      sleep 5
      /snap/bin/lxc exec postgresql -- /bin/bash -c "echo 10.27.95.5 nexus >/etc/hosts && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy-updates main restricted universe > /etc/apt/sources.list && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy main restricted universe >> /etc/apt/sources.list"      
      /snap/bin/lxc exec postgresql -- /bin/bash -c "apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' -y -q"
      /snap/bin/lxc exec postgresql -- /bin/bash -c "echo 10.27.95.5 nexus >/etc/hosts && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy-updates main restricted universe > /etc/apt/sources.list && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy main restricted universe >> /etc/apt/sources.list"
      /snap/bin/lxc exec postgresql -- /bin/bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install postgresql -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' -y -q"
      /snap/bin/lxc exec postgresql -- /bin/bash -c "cd /var/lib/postgresql; sudo -u postgres psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = '{{ pg.dbname }}'\" | grep -q 1 || sudo -u postgres psql -U postgres -tc \"CREATE DATABASE {{ pg.dbname }};\""
      /snap/bin/lxc exec postgresql -- /bin/bash -c "cd /var/lib/postgresql; sudo -u postgres psql -U postgres -tc \"CREATE USER {{ pg.username }} with encrypted password '{{ pg.password }}';\""
      /snap/bin/lxc exec postgresql -- /bin/bash -c "cd /var/lib/postgresql; sudo -u postgres psql -U postgres -tc \"GRANT ALL PRIVILEGES ON {{ pg.dbname }} TO '{{ pg.username }}';\""

  - name: setup clientapi container
    ansible.builtin.shell: |
      lxc list ips1 -f csv -c s | grep RUNNING >/dev/null 2>&1 || /snap/bin/lxc start ips1
      sleep 5
      /snap/bin/lxc exec ips1 -- /bin/bash -c "echo 10.27.95.5 nexus >/etc/hosts && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy-updates main restricted universe > /etc/apt/sources.list && echo deb http://nexus:8081/repository/apt-proxy/ubuntu jammy main restricted universe >> /etc/apt/sources.list"
      /snap/bin/lxc exec ips1 -- /bin/bash -c "apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' -y -q && apt-get install python3 python3-pip -y -q"
      /snap/bin/lxc file push /tmp/app.tar.gz ips1/tmp/app.tar.gz
      /snap/bin/lxc file push /tmp/clientapi.service ips1/usr/lib/systemd/system/clientapi.service
      /snap/bin/lxc file push /tmp/00-clientapi.conf ips1/etc/rsyslog.d/00-clientapi.conf
      /snap/bin/lxc file push /tmp/clientapisrv ips1/etc/logrotate.d/clientapisrv
      /snap/bin/lxc exec ips1 -- /bin/bash -c "grep client /etc/passwd >/dev/null || useradd -d /home/client -m -s /usr/sbin/nologin client && tar -C /home/client -xzf /tmp/app.tar.gz && systemctl enable clientapi.service && mkdir /var/log/clientapisrv && chown syslog:adm /var/log/clientapisrv && systemctl restart rsyslog"
      /snap/bin/lxc exec ips1 -- sudo -u client -s /bin/bash -c "cd /home/client && /usr/bin/python3 -m pip install --index-url http://nexus:8081/repository/pypi-all/simple --trusted-host nexus -r requirements.txt"
      /snap/bin/lxc exec ips1 -- /bin/bash -c "systemctl daemon-reload && systemctl restart clientapi.service"
